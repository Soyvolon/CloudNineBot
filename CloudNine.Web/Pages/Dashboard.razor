@page "/dash"
@inject LoginService _login;
@inject NavigationManager _nav;

@if (!_login.LoggedIn)
{
    <RequireLogin />
}
else
{
    if (guildAuthError)
    {
        <div class="alert alert-dismissible alert-danger">
            <a href="/dash" @onclick="StateHasChanged">
                <span class="close">&times;</span>
            </a>
            <strong>An unathroized connection was attempted.</strong> That guild has been removed from the list as we cant seem to connect to it.
        </div>
    }

    if (_login.OrderedGuilds is not null)
    {
        foreach (var g in _login.OrderedGuilds)
        {
            switch (c)
            {
                case 0:
                    g1 = g.Value;
                    break;
                case 1:
                    g2 = g.Value;
                    break;
                case 2:
                    g3 = g.Value;
                    break;
            }

            if (c == 2)
            {
                <div class="row">
                    @if (g1 is not null)
                    {
                        <GuildCard CardType="@GetCardType()" ButtonType="@GetButtonType()" Guild="g1"></GuildCard>
                    }
                    @if (g2 is not null)
                    {
                        <GuildCard CardType="@GetCardType()" ButtonType="@GetButtonType()" Guild="g2"></GuildCard>
                    }
                    @if (g3 is not null)
                    {
                        <GuildCard CardType="@GetCardType()" ButtonType="@GetButtonType()" Guild="g3"></GuildCard>
                    }
                </div>

                c = -1;
                g1 = null;
                g2 = null;
                g3 = null;
            }

            c++;
        }

        if (g1 is not null)
        {
        <div class="row">
            @if (g1 is not null)
            {
                <GuildCard CardType="@GetCardType()" ButtonType="@GetButtonType()" Guild="g1"></GuildCard>
            }
            else
            {
                <div class="col"></div>
            }
            @if (g2 is not null)
            {
                <GuildCard CardType="@GetCardType()" ButtonType="@GetButtonType()" Guild="g2"></GuildCard>
            }
            else
            {
                <div class="col"></div>
            }
            @if (g3 is not null)
            {
                <GuildCard CardType="@GetCardType()" ButtonType="@GetButtonType()" Guild="g3"></GuildCard>
            }
            else
            {
                <div class="col"></div>
            }
        </div>
        }
    }
    else
    {
        <h3>No guilds found. Invite Cloud Bot to your server now <a href="">here!</a></h3>
    }
}

@code {
    public bool guildAuthError = false;
    public bool primaryCard = true;

    private int c = 0;
    private DiscordGuild? g1;
    private DiscordGuild? g2;
    private DiscordGuild? g3;

    public string GetCardType()
    {
        var res = primaryCard ? "bg-primary" : "bg-secondary";
        primaryCard = !primaryCard;
        return res;
    }

    public string GetButtonType()
    {
        return primaryCard ? "btn-primary" : "btn-secondary";
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        bool newAuth = guildAuthError;
        var uri = new Uri(_nav.Uri);
        string? error = HttpUtility.ParseQueryString(uri.Query).Get("error");
        if (error is not null && error == "guildauth")
        {
            newAuth = true;
        }
        else
        {
            newAuth = false;
        }

        if(newAuth != guildAuthError)
        {
            guildAuthError = newAuth;
            StateHasChanged();
        }
    }
}
